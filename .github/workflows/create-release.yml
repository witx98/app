name: Create release and update distributions

on:
  push:
    tags:
      - '*'

jobs:
  build:
    uses: ./.github/workflows/build-cli.yml

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download app binaries artifact - linuxx64
        uses: actions/download-artifact@v4
        with:
          path: ./bins

      - name: Package artifacts
        run: for d in ./bins/*/; do zip -r "./bins/$(basename "$d").zip" "$d"; done

      - name: List artifacts
        run: |
          tree ./bins

      - name: Test files (if version-summary.md exists)
        run: ls -l && ls -l ./changelog && echo "v${GITHUB_REF/refs\/tags\//}" && ls -l ./changelog/v${GITHUB_REF/refs\/tags\//}

      - name: Check if file exists
        run: echo $GITHUB_WORKSPACE/changelog/v${GITHUB_REF/refs\/tags\//}/version-summary.md

      - name: Set RELEASE_BODY_FILE env
        run: echo "RELEASE_BODY_FILE=$(echo $GITHUB_WORKSPACE/changelog/v${GITHUB_REF/refs\/tags\//}/version-summary.md)" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          #  when tag has 'v' in name no need of adding it before ${GITHUB_REF/refs\/tags\//
          body_path: ${{ env.RELEASE_BODY_FILE }}
          # upload-artifact and then download creates files like this:
          # ./bins/logchange-linuxx64/logchange
          # then we zip it to make it smaller
          # https://github.com/softprops/action-gh-release/issues/342
          files: |
            ./bins/*.zip
        env:
          # Cannot use GITHUB_TOKEN because of:
          # https://github.com/orgs/community/discussions/27028
          GITHUB_TOKEN: ${{ secrets.WITX_PAT_TOKEN }}

  update-distributions:
    name: Update distributions
    needs: create-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download .zip assets from latest release
        run: |
          gh release download latest --repo ${{ github.repository }} --pattern "*.zip" --dir ./bins
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update distributions
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_PROJECT_VERSION: ${{ github.ref_name }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_HOMEBREW_GITHUB_TOKEN: ${{ secrets.WITX_PAT_TOKEN }}