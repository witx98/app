name: CLI Build with GraalVM Native Image

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main
jobs:
  build:
    name: Build CLI on ${{ matrix.name }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - name: "Linux x86_64"
            base: linux
            runs-on: ubuntu-24.04
            platform: linuxx64

# GH does not provide arm64 linux
#          - name: "Linux ARM64"
#            base: linux
#            runs-on: self-hosted
#            platform: linuxarm64

          - name: "macOS x86_64"
            base: macos
            runs-on: macos-13
            platform: darwinx64

          - name: "macOS ARM64"
            base: macos
            runs-on: macos-14
            platform: darwinarm64

          - name: "Windows x86_64"
            base: windows
            runs-on: windows-2022
            platform: windowsx64
    steps:
      - uses: actions/checkout@v4

      # musl is only available on linux
      - if: ${{ matrix.base == 'linux' }}
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'
          native-image-musl: 'true'
      - if: ${{ matrix.base != 'linux' }}
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'

      - name: Check environment
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          native-image --version
          uname -s
          uname -m

      # musl is only available on linux
      - if: ${{ matrix.base == 'linux' }}
        name: Build CLI executable (static)
        run: mvn -Pnative-static package -DskipTests

      - if: ${{ matrix.base != 'linux' }}
        name: Build CLI executable (non-static)
        run: mvn -Pnative package -DskipTests

      - name: Check target dir
        run: ls -l target

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.platform }}
          path: |
            target/app*
            !target/app*.jar

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download app binaries artifact - linuxx64
        uses: actions/download-artifact@v4
        with:
          path: ./bins

      - name: Package artifacts
        run: for d in ./bins/*/; do zip -r "./bins/$(basename "$d").zip" "$d"; done

      - name: List artifacts
        run: |
          tree ./bins

      - name: Test files (if version-summary.md exists)
        run: ls -l && ls -l ./changelog && echo "v${GITHUB_REF/refs\/tags\//}" && ls -l ./changelog/v${GITHUB_REF/refs\/tags\//}

      - name: Check if file exissts
        run: echo $GITHUB_WORKSPACE/changelog/v${GITHUB_REF/refs\/tags\//}/version-summary.md

      - name: Set RELEASE_BODY_FILE env
        run: echo "RELEASE_BODY_FILE=$(echo $GITHUB_WORKSPACE/changelog/v${GITHUB_REF/refs\/tags\//}/version-summary.md)" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          #  when tag has 'v' in name no need of adding it before ${GITHUB_REF/refs\/tags\//
          body_path: ${{ env.RELEASE_BODY_FILE }}
          # upload-artifact and then download creates files like this:
          # ./bins/logchange-linuxx64/logchange
          # then we zip it to make it smaller
          # https://github.com/softprops/action-gh-release/issues/342
          files: |
            ./bins/*.zip
        env:
          # Cannot use GITHUB_TOKEN because of:
          # https://github.com/orgs/community/discussions/27028
          GITHUB_TOKEN: ${{ secrets.WITX_PAT_TOKEN }}

      - name: Set up JReleaser
        uses: jreleaser/release-action@v2